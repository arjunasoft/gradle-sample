/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'

// archieve
archivesBaseName='gradle-sample'
// version

version ='1.0'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.25'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


/* project.description = 'Simple Project' */
/*  setDescription("Simple Project")
task simple << {
   println 'Running simple task for project ' + project
   getDescription()
}

task first {
  doFirst { Task task ->
    
	      println "Running ${task.name}"   
	    
  } 
}

task second {
  doLast { Task task ->
     // println "Running ${task.name}"
	 println "Running ${it.name}"
  } 
}

//task third << { taskObject -> 
//     println 'Running ' + taskObject.name 
//}

task third(dependsOn: 'second') << { task ->
   println "Run ${task.name}"
}

task numbers << {
  (1..4).each {number ->
     def squared=number * number
	 println "Square of ${number}=${squared}"
  
  }
}

task list{
    doFirst{
	   def list =['Groovy','Gradle']
	   println list.collect {it[0].toLowerCase()}.join('&')
	}
}

//define dependency
second.dependsOn =['first']

*/

// create a JAR file
task sourcesJar(type: Jar){
   classifier = 'sources'
   from sourceSets.main.allSource
}

//generated documentation
task docJar(type: Jar, dependsOn:javadoc){
  classifier = 'docs'
  from javadoc.destinationDir
}

// add extra JAR file
artifacts {
   archives sourcesJar
   archives docJar
}